package helpSystem;

import arc.util.CommandHandler;
import mindustry.mod.Plugin;
import mindustry.gen.Call;
import mindustry.gen.Groups;
import mindustry.gen.Player;
import static mindustry.Vars.*;
import arc.Core;

public class helpSystem extends Plugin {
    
    private static final String PREFIX = "[royal]„Ää[cyan]–ü–û–ú–û–©–¨[royal]„Äã[white] ";
    
    @Override
    public void init() {
        // –ö—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–≥–∏–Ω–∞
        System.out.println("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        System.out.println("   [HelpSystem] –°–ò–°–¢–ï–ú–ê –ü–û–ú–û–©–ò!");
        System.out.println("   –í–µ—Ä—Å–∏—è: 1.0");
        System.out.println("   –ê–≤—Ç–æ—Ä: blysspeak");
        System.out.println("   –¢–∏–ø: –°–µ—Ä–≤–µ—Ä–Ω—ã–π –ø–ª–∞–≥–∏–Ω");
        System.out.println("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
    }
    
    @Override
    public void registerServerCommands(CommandHandler handler) {
        System.out.println("[HelpSystem] –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥...");
    }
    
    @Override
    public void registerClientCommands(CommandHandler handler) {
        // –ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏ - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é
        handler.register("help", "[–∫–æ–º–∞–Ω–¥–∞]", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –ø–æ–º–æ—â—å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ", args -> {
            if (args.length > 0) {
                // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)
                showSpecificCommandHelp(args[0]);
            } else {
                // –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –º–µ–Ω—é —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
                showBeautifulHelpMenu();
            }
        });
        
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        handler.register("commands", "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", args -> {
            showBeautifulHelpMenu();
        });
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
        handler.register("serverinfo", "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ", args -> {
            showServerInfo();
        });
        
        // –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
        handler.register("players", "–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω", args -> {
            showPlayersList();
        });
        
        // –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞  
        handler.register("rules", "–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞", args -> {
            showServerRules();
        });
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∞—Ö
        handler.register("admins", "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", args -> {
            showAdminsList();
        });
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞
        handler.register("stats", "[–∏–≥—Ä–æ–∫]", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞", args -> {
            if (args.length > 0) {
                showPlayerStats(args[0]);
            } else {
                // –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É (—ç—Ç–æ —Å–ª–æ–∂–Ω–æ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º –º–æ–¥–µ)
                showPlayerStats(""); // –ü–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
            }
        });
    }
    
    private void showBeautifulHelpMenu() {
        StringBuilder message = new StringBuilder();
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        message.append("[royal]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        message.append("[royal]‚ïë[cyan]         –°–ò–°–¢–ï–ú–ê –ü–û–ú–û–©–ò         [royal]‚ïë\n");
        message.append("[royal]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        // –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
        message.append("[yellow]üìã –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:\n");
        message.append("[white]‚Ä¢ [cyan]/help [–∫–æ–º–∞–Ω–¥–∞][white] - –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–µ\n");
        message.append("[white]‚Ä¢ [cyan]/commands[white] - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã\n");
        message.append("[white]‚Ä¢ [cyan]/serverinfo[white] - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ\n");
        message.append("[white]‚Ä¢ [cyan]/players[white] - –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤\n");
        message.append("[white]‚Ä¢ [cyan]/rules[white] - –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞\n");
        message.append("[white]‚Ä¢ [cyan]/stats [–∏–≥—Ä–æ–∫][white] - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞\n");
        message.append("[white]‚Ä¢ [cyan]/admins[white] - –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n");
        
        // –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π
        message.append("[green]üéÆ –ò–ì–†–û–í–´–ï –ö–û–ú–ê–ù–î–´:\n");
        message.append("[white]‚Ä¢ [cyan]/wave[white] - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–ª–Ω–µ\n");
        message.append("[white]‚Ä¢ [cyan]/surrender[white] - –°–¥–∞—Ç—å—Å—è (–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ)\n");
        message.append("[white]‚Ä¢ [cyan]/votekick <–∏–≥—Ä–æ–∫>[white] - –ö–∏–∫–Ω—É—Ç—å –∏–≥—Ä–æ–∫–∞\n");
        message.append("[white]‚Ä¢ [cyan]/sync[white] - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n");
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        message.append("[sky]üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û:\n");
        message.append("[white]‚Ä¢ [cyan]/t <—Å–æ–æ–±—â–µ–Ω–∏–µ>[white] - –ö–æ–º–∞–Ω–¥–Ω—ã–π —á–∞—Ç\n");
        message.append("[white]‚Ä¢ [cyan]/discord[white] - –°—Å—ã–ª–∫–∞ –Ω–∞ Discord\n");
        message.append("[white]‚Ä¢ [cyan]/donate[white] - –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä\n");
        message.append("[white]‚Ä¢ [cyan]/version[white] - –í–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞\n\n");
        
        // –ü–æ–¥–≤–∞–ª
        message.append("[royal]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        message.append("[royal]‚ïë[yellow] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [cyan]/help <–∫–æ–º–∞–Ω–¥–∞>[yellow] –¥–ª—è  [royal]‚ïë\n");
        message.append("[royal]‚ïë[yellow]    –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –ø–æ–º–æ—â–∏   [royal]‚ïë\n");
        message.append("[royal]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        
        Call.sendMessage(message.toString());
    }
    
    private void showSpecificCommandHelp(String command) {
        String helpText = "";
        
        switch (command.toLowerCase()) {
            case "help":
                helpText = "[cyan]help [–∫–æ–º–∞–Ω–¥–∞][white] - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –ø–æ–º–æ—â—å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ";
                break;
            case "serverinfo":
                helpText = "[cyan]serverinfo[white] - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏–≥—Ä–æ–∫–æ–≤, –∫–∞—Ä—Ç—É, –≤–æ–ª–Ω—É";
                break;
            case "players":
                helpText = "[cyan]players[white] - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω —Å –∏—Ö ID –∏ —Å—Ç–∞—Ç—É—Å–æ–º";
                break;
            case "stats":
                helpText = "[cyan]stats [–∏–≥—Ä–æ–∫][white] - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞: –≤—Ä–µ–º—è –∏–≥—Ä—ã, –ø–æ—Å—Ç—Ä–æ–π–∫–∏, —É–±–∏–π—Å—Ç–≤–∞";
                break;
            case "wave":
                helpText = "[cyan]wave[white] - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤–æ–ª–Ω–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π";
                break;
            case "surrender":
                helpText = "[cyan]surrender[white] - –ù–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Å–¥–∞—á—É (—Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–µ 50% –≥–æ–ª–æ—Å–æ–≤)";
                break;
            case "votekick":
                helpText = "[cyan]votekick <–∏–≥—Ä–æ–∫>[white] - –ù–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞";
                break;
            case "sync":
                helpText = "[cyan]sync[white] - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º (–ø—Ä–∏ –ª–∞–≥–∞—Ö)";
                break;
            case "t":
                helpText = "[cyan]t <—Å–æ–æ–±—â–µ–Ω–∏–µ>[white] - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ—é–∑–Ω–∏–∫–∞–º –ø–æ –∫–æ–º–∞–Ω–¥–µ";
                break;
            default:
                helpText = "[red]–ö–æ–º–∞–Ω–¥–∞ '" + command + "' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.";
        }
        
        Call.sendMessage(PREFIX + helpText);
    }
    
    private void showServerInfo() {
        StringBuilder info = new StringBuilder();
        
        info.append("[sky]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        info.append("[sky]‚ïë[yellow]        –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ï–†–í–ï–†–ï      [sky]‚ïë\n");
        info.append("[sky]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        info.append("[yellow]üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: [white]").append(Core.settings.getString("servername", "Mindustry Server")).append("\n");
        info.append("[yellow]üë• –ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: [white]").append(Groups.player.size()).append("\n");
        info.append("[yellow]üó∫Ô∏è –ö–∞—Ä—Ç–∞: [white]").append(state.map != null ? state.map.name() : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ").append("\n");
        info.append("[yellow]üìä –†–µ–∂–∏–º: [white]").append(state.rules.pvp ? "PvP" : (state.rules.waves ? "Survival" : "Sandbox")).append("\n");
        
        if (state.rules.waves) {
            info.append("[yellow]üåä –í–æ–ª–Ω–∞: [white]").append(state.wave).append("\n");
            float timeLeft = state.wavetime / 60f;
            info.append("[yellow]‚è±Ô∏è –î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤–æ–ª–Ω—ã: [white]").append(String.format("%.0f", timeLeft)).append(" —Å–µ–∫\n");
        }
        
        info.append("[yellow]‚ö° –í–µ—Ä—Å–∏—è: [white]").append("v150.1").append("\n");
        info.append("[yellow]üîß –°–±–æ—Ä–∫–∞: [white]").append("150.1").append("\n");
        
        Call.sendMessage(info.toString());
    }
    
    private void showPlayersList() {
        if (Groups.player.size() == 0) {
            Call.sendMessage(PREFIX + "[red]–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω!");
            return;
        }
        
        StringBuilder list = new StringBuilder();
        
        list.append("[green]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        list.append("[green]‚ïë[yellow]         –ò–ì–†–û–ö–ò –û–ù–õ–ê–ô–ù           [green]‚ïë\n");
        list.append("[green]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        int index = 1;
        for (Player p : Groups.player) {
            String status = p.admin ? "[red][–ê–î–ú–ò–ù]" : "[white][–ò–ì–†–û–ö]";
            String team = p.team() != null ? "[#" + p.team().color + "]" + p.team().name : "[white]None";
            
            list.append("[yellow]").append(index++).append(". ")
                .append(status).append(" [white]").append(p.name)
                .append(" ").append(team).append("\n");
        }
        
        list.append("\n[green]–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: [yellow]").append(Groups.player.size());
        
        Call.sendMessage(list.toString());
    }
    
    private void showServerRules() {
        StringBuilder rules = new StringBuilder();
        
        rules.append("[red]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        rules.append("[red]‚ïë[yellow]        –ü–†–ê–í–ò–õ–ê –°–ï–†–í–ï–†–ê          [red]‚ïë\n");
        rules.append("[red]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        rules.append("[white]1. [cyan]–£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤\n");
        rules.append("[white]2. [cyan]–ó–∞–ø—Ä–µ—â–µ–Ω —Å–ø–∞–º –∏ —Ñ–ª—É–¥\n");
        rules.append("[white]3. [cyan]–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Ç—ã –∏–ª–∏ –±–∞–≥–∏\n");
        rules.append("[white]4. [cyan]–ù–µ —Ä–∞–∑—Ä—É—à–∞–π—Ç–µ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—é–∑–Ω–∏–∫–æ–≤\n");
        rules.append("[white]5. [cyan]–°–ª—É—à–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é\n");
        rules.append("[white]6. [cyan]–ò–≥—Ä–∞–π—Ç–µ —á–µ—Å—Ç–Ω–æ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ!\n\n");
        
        rules.append("[yellow]‚ö†Ô∏è –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –±–∞–Ω—É!\n");
        rules.append("[green]üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∞–º–∏: Discord –∏–ª–∏ /admins");
        
        Call.sendMessage(rules.toString());
    }
    
    private void showAdminsList() {
        StringBuilder admins = new StringBuilder();
        
        admins.append("[red]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        admins.append("[red]‚ïë[yellow]        –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–Ø            [red]‚ïë\n");
        admins.append("[red]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–æ–≤
        boolean hasOnlineAdmins = false;
        admins.append("[green]üü¢ –û–Ω–ª–∞–π–Ω:\n");
        for (Player p : Groups.player) {
            if (p.admin) {
                admins.append("[white]‚Ä¢ [red]").append(p.name).append("\n");
                hasOnlineAdmins = true;
            }
        }
        
        if (!hasOnlineAdmins) {
            admins.append("[gray]‚Ä¢ –ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–Ω–ª–∞–π–Ω\n");
        }
        
        admins.append("\n[red]üìã –ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è:\n");
        admins.append("[white]‚Ä¢ [red]blysspeak [gray](–í–ª–∞–¥–µ–ª–µ—Ü)\n");
        admins.append("[white]‚Ä¢ [yellow]Admin1 [gray](–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n");
        admins.append("[white]‚Ä¢ [yellow]Admin2 [gray](–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n\n");
        
        admins.append("[cyan]üí¨ –°–≤—è–∑—å: Discord —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è");
        
        Call.sendMessage(admins.toString());
    }
    
    private void showPlayerStats(String playerName) {
        Player target = null;
        
        if (playerName != null && !playerName.isEmpty()) {
            target = Groups.player.find(p -> p.name.equalsIgnoreCase(playerName));
        } else {
            // –î–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –º–æ–¥–∞ —Å–ª–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
            // –ü–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
            if (Groups.player.size() > 0) {
                target = Groups.player.first();
            }
        }
        
        if (target == null) {
            Call.sendMessage(PREFIX + "[red]–ò–≥—Ä–æ–∫ '" + playerName + "' –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            return;
        }
        
        StringBuilder stats = new StringBuilder();
        
        stats.append("[sky]‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
        stats.append("[sky]‚ïë[yellow]    –°–¢–ê–¢–ò–°–¢–ò–ö–ê: ").append(target.name).append("   [sky]‚ïë\n");
        stats.append("[sky]‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n");
        
        stats.append("[yellow]üë§ –ò–≥—Ä–æ–∫: [white]").append(target.name).append("\n");
        stats.append("[yellow]üè∑Ô∏è –°—Ç–∞—Ç—É—Å: ").append(target.admin ? "[red]–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" : "[white]–ò–≥—Ä–æ–∫").append("\n");
        stats.append("[yellow]üéØ –ö–æ–º–∞–Ω–¥–∞: [#").append(target.team().color).append("]").append(target.team().name).append("\n");
        stats.append("[yellow]üìç ID: [white]").append(target.id).append("\n");
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
        if (target.unit() != null) {
            stats.append("[yellow]ü§ñ –Æ–Ω–∏—Ç: [white]").append(target.unit().type.localizedName).append("\n");
            stats.append("[yellow]‚ù§Ô∏è HP: [white]").append((int)target.unit().health).append("/").append((int)target.unit().maxHealth).append("\n");
        }
        
        stats.append("[yellow]‚è±Ô∏è –í—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: [white]").append("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ").append("\n");
        
        Call.sendMessage(stats.toString());
    }
}